{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thami\\\\Documents\\\\21W- Local Software Dev Group Project\\\\medicalRecordsV2\\\\src\\\\Components\\\\MyUpdateButton.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport jq from 'jquery';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction MyUpdateButton() {\n  _s();\n  const currentContext = useContext(CurrentContext);\n  function handleUpdate() {\n    var url_updateMedicalRecords = 'http://localhost:4000/updateMedicalRecordsPdo.php';\n    jq.ajax({\n      type: \"POST\",\n      url: url_updateMedicalRecords,\n      data: {\n        nhsNumber: currentContext.medicalRecord.NHSNumber,\n        forename: forename,\n        surname: surname,\n        personDOB: personDOB,\n        genderCode: genderCode,\n        postcode: postcode\n      },\n      success: function (data, textStatus, xhr) {\n        if (data === \"no patients\") {\n          props.callback(-100);\n        } else {\n          var json = jq.parseJSON(data);\n          console.log(\"Raw server response:\", xhr.responseText);\n          props.callback(json[0].NHSNumber); //change NHSnumber to nhsNumber depending on the right dB\n          props.callback(json[2].Surname);\n          props.callback(json[3].PersonDOB);\n          props.callback(json[4].GenderCode);\n          props.callback(json[5].Postcode);\n          currentContext.setMedicalRecord(json[0]);\n        }\n      }\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      id: \"submitButton\",\n      onClick: () => handleUpdate(props),\n      children: \" Update \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(MyUpdateButton, \"kfE+Mm4CXRMTuS4+N/9QPFGSsmU=\");\n_c = MyUpdateButton;\nexport default MyUpdateButton;\nvar _c;\n$RefreshReg$(_c, \"MyUpdateButton\");","map":{"version":3,"names":["React","jq","jsxDEV","_jsxDEV","Fragment","_Fragment","MyUpdateButton","_s","currentContext","useContext","CurrentContext","handleUpdate","url_updateMedicalRecords","ajax","type","url","data","nhsNumber","medicalRecord","NHSNumber","forename","surname","personDOB","genderCode","postcode","success","textStatus","xhr","props","callback","json","parseJSON","console","log","responseText","Surname","PersonDOB","GenderCode","Postcode","setMedicalRecord","children","Button","id","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/thami/Documents/21W- Local Software Dev Group Project/medicalRecordsV2/src/Components/MyUpdateButton.js"],"sourcesContent":["import React from 'react';\r\nimport jq from 'jquery';\r\n\r\nfunction MyUpdateButton() {\r\n    const currentContext = useContext(CurrentContext);\r\n\r\n    function handleUpdate() {\r\n        var url_updateMedicalRecords = 'http://localhost:4000/updateMedicalRecordsPdo.php';\r\n\r\n        jq.ajax({\r\n            type: \"POST\",\r\n            url: url_updateMedicalRecords,\r\n            data: {\r\n                nhsNumber: currentContext.medicalRecord.NHSNumber,\r\n                forename: forename,\r\n                surname: surname,\r\n                personDOB: personDOB,\r\n                genderCode: genderCode,\r\n                postcode: postcode\r\n            },\r\n\r\n            success: function (data, textStatus, xhr) {\r\n                if (data === \"no patients\") {\r\n                    props.callback(-100);\r\n                } else {\r\n                    var json = jq.parseJSON(data);\r\n                    console.log(\"Raw server response:\", xhr.responseText);\r\n                    props.callback(json[0].NHSNumber);    //change NHSnumber to nhsNumber depending on the right dB\r\n                    props.callback(json[2].Surname);\r\n                    props.callback(json[3].PersonDOB);\r\n                    props.callback(json[4].GenderCode);\r\n                    props.callback(json[5].Postcode);\r\n                    currentContext.setMedicalRecord(json[0]);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Button id=\"submitButton\" onClick={() => handleUpdate(props)}> Update </Button>\r\n        </>\r\n\r\n    );\r\n}\r\nexport default MyUpdateButton;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,EAAE,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExB,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAMC,cAAc,GAAGC,UAAU,CAACC,cAAc,CAAC;EAEjD,SAASC,YAAYA,CAAA,EAAG;IACpB,IAAIC,wBAAwB,GAAG,mDAAmD;IAElFX,EAAE,CAACY,IAAI,CAAC;MACJC,IAAI,EAAE,MAAM;MACZC,GAAG,EAAEH,wBAAwB;MAC7BI,IAAI,EAAE;QACFC,SAAS,EAAET,cAAc,CAACU,aAAa,CAACC,SAAS;QACjDC,QAAQ,EAAEA,QAAQ;QAClBC,OAAO,EAAEA,OAAO;QAChBC,SAAS,EAAEA,SAAS;QACpBC,UAAU,EAAEA,UAAU;QACtBC,QAAQ,EAAEA;MACd,CAAC;MAEDC,OAAO,EAAE,SAAAA,CAAUT,IAAI,EAAEU,UAAU,EAAEC,GAAG,EAAE;QACtC,IAAIX,IAAI,KAAK,aAAa,EAAE;UACxBY,KAAK,CAACC,QAAQ,CAAC,CAAC,GAAG,CAAC;QACxB,CAAC,MAAM;UACH,IAAIC,IAAI,GAAG7B,EAAE,CAAC8B,SAAS,CAACf,IAAI,CAAC;UAC7BgB,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEN,GAAG,CAACO,YAAY,CAAC;UACrDN,KAAK,CAACC,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CAACX,SAAS,CAAC,CAAC,CAAI;UACtCS,KAAK,CAACC,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CAACK,OAAO,CAAC;UAC/BP,KAAK,CAACC,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CAACM,SAAS,CAAC;UACjCR,KAAK,CAACC,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CAACO,UAAU,CAAC;UAClCT,KAAK,CAACC,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CAACQ,QAAQ,CAAC;UAChC9B,cAAc,CAAC+B,gBAAgB,CAACT,IAAI,CAAC,CAAC,CAAC,CAAC;QAC5C;MACJ;IACJ,CAAC,CAAC;EACN;EAGA,oBACI3B,OAAA,CAAAE,SAAA;IAAAmC,QAAA,eACIrC,OAAA,CAACsC,MAAM;MAACC,EAAE,EAAC,cAAc;MAACC,OAAO,EAAEA,CAAA,KAAMhC,YAAY,CAACiB,KAAK,CAAE;MAAAY,QAAA,EAAC;IAAQ;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAS,iBAChF;AAGX;AAACxC,EAAA,CA1CQD,cAAc;AAAA0C,EAAA,GAAd1C,cAAc;AA2CvB,eAAeA,cAAc;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}