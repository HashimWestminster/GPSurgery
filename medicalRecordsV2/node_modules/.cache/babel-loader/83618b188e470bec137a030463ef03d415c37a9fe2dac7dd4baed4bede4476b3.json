{"ast":null,"code":"import '../../Object/defineProperty.mjs';\nimport '../../Element.mjs';\n\n// @ts-nocheck\n\n(function (undefined) {\n  // Detection from https://raw.githubusercontent.com/Financial-Times/polyfill-library/13cf7c340974d128d557580b5e2dafcd1b1192d1/polyfills/Element/prototype/dataset/detect.js\n  var detect = function () {\n    if (!document.documentElement.dataset) {\n      return false;\n    }\n    var el = document.createElement('div');\n    el.setAttribute(\"data-a-b\", \"c\");\n    return el.dataset && el.dataset.aB == \"c\";\n  }();\n  if (detect) return;\n\n  // Polyfill derived from  https://raw.githubusercontent.com/Financial-Times/polyfill-library/13cf7c340974d128d557580b5e2dafcd1b1192d1/polyfills/Element/prototype/dataset/polyfill.js\n  Object.defineProperty(Element.prototype, 'dataset', {\n    get: function () {\n      var element = this;\n      var attributes = this.attributes;\n      var map = {};\n      for (var i = 0; i < attributes.length; i++) {\n        var attribute = attributes[i];\n\n        // This regex has been edited from the original polyfill, to add\n        // support for period (.) separators in data-* attribute names. These\n        // are allowed in the HTML spec, but were not covered by the original\n        // polyfill's regex. We use periods in our i18n implementation.\n        if (attribute && attribute.name && /^data-\\w[.\\w-]*$/.test(attribute.name)) {\n          var name = attribute.name;\n          var value = attribute.value;\n          var propName = name.substr(5).replace(/-./g, function (prop) {\n            return prop.charAt(1).toUpperCase();\n          });\n\n          // If this browser supports __defineGetter__ and __defineSetter__,\n          // continue using defineProperty. If not (like IE 8 and below), we use\n          // a hacky fallback which at least gives an object in the right format\n          if ('__defineGetter__' in Object.prototype && '__defineSetter__' in Object.prototype) {\n            Object.defineProperty(map, propName, {\n              enumerable: true,\n              get: function () {\n                return this.value;\n              }.bind({\n                value: value || ''\n              }),\n              set: function setter(name, value) {\n                if (typeof value !== 'undefined') {\n                  this.setAttribute(name, value);\n                } else {\n                  this.removeAttribute(name);\n                }\n              }.bind(element, name)\n            });\n          } else {\n            map[propName] = value;\n          }\n        }\n      }\n      return map;\n    }\n  });\n}).call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});","map":{"version":3,"names":["undefined","detect","document","documentElement","dataset","el","createElement","setAttribute","aB","Object","defineProperty","Element","prototype","get","element","attributes","map","i","length","attribute","name","test","value","propName","substr","replace","prop","charAt","toUpperCase","enumerable","bind","set","setter","removeAttribute","call","window","self","global"],"sources":["C:/Users/thami/Documents/21W- Local Software Dev Group Project/medicalRecordsV2/node_modules/govuk-frontend/govuk-esm/vendor/polyfills/Element/prototype/dataset.mjs"],"sourcesContent":["import '../../Object/defineProperty.mjs';\nimport '../../Element.mjs';\n\n// @ts-nocheck\n\n(function(undefined) {\n\n  // Detection from https://raw.githubusercontent.com/Financial-Times/polyfill-library/13cf7c340974d128d557580b5e2dafcd1b1192d1/polyfills/Element/prototype/dataset/detect.js\n  var detect = (function(){\n    if (!document.documentElement.dataset) {\n      return false;\n    }\n    var el = document.createElement('div');\n    el.setAttribute(\"data-a-b\", \"c\");\n    return el.dataset && el.dataset.aB == \"c\";\n  }());\n\n  if (detect) return\n\n  // Polyfill derived from  https://raw.githubusercontent.com/Financial-Times/polyfill-library/13cf7c340974d128d557580b5e2dafcd1b1192d1/polyfills/Element/prototype/dataset/polyfill.js\n  Object.defineProperty(Element.prototype, 'dataset', {\n    get: function() {\n      var element = this;\n      var attributes = this.attributes;\n      var map = {};\n\n      for (var i = 0; i < attributes.length; i++) {\n        var attribute = attributes[i];\n\n        // This regex has been edited from the original polyfill, to add\n        // support for period (.) separators in data-* attribute names. These\n        // are allowed in the HTML spec, but were not covered by the original\n        // polyfill's regex. We use periods in our i18n implementation.\n        if (attribute && attribute.name && (/^data-\\w[.\\w-]*$/).test(attribute.name)) {\n          var name = attribute.name;\n          var value = attribute.value;\n\n          var propName = name.substr(5).replace(/-./g, function (prop) {\n            return prop.charAt(1).toUpperCase();\n          });\n\n          // If this browser supports __defineGetter__ and __defineSetter__,\n          // continue using defineProperty. If not (like IE 8 and below), we use\n          // a hacky fallback which at least gives an object in the right format\n          if ('__defineGetter__' in Object.prototype && '__defineSetter__' in Object.prototype) {\n            Object.defineProperty(map, propName, {\n              enumerable: true,\n              get: function() {\n                return this.value;\n              }.bind({value: value || ''}),\n              set: function setter(name, value) {\n                if (typeof value !== 'undefined') {\n                  this.setAttribute(name, value);\n                } else {\n                  this.removeAttribute(name);\n                }\n              }.bind(element, name)\n            });\n          } else {\n            map[propName] = value;\n          }\n\n        }\n      }\n\n      return map;\n    }\n  });\n\n}).call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\n//# sourceMappingURL=vendor/polyfills/Element/prototype/dataset.mjs.map\n"],"mappings":"AAAA,OAAO,iCAAiC;AACxC,OAAO,mBAAmB;;AAE1B;;AAEA,CAAC,UAASA,SAAS,EAAE;EAEnB;EACA,IAAIC,MAAM,GAAI,YAAU;IACtB,IAAI,CAACC,QAAQ,CAACC,eAAe,CAACC,OAAO,EAAE;MACrC,OAAO,KAAK;IACd;IACA,IAAIC,EAAE,GAAGH,QAAQ,CAACI,aAAa,CAAC,KAAK,CAAC;IACtCD,EAAE,CAACE,YAAY,CAAC,UAAU,EAAE,GAAG,CAAC;IAChC,OAAOF,EAAE,CAACD,OAAO,IAAIC,EAAE,CAACD,OAAO,CAACI,EAAE,IAAI,GAAG;EAC3C,CAAC,EAAG;EAEJ,IAAIP,MAAM,EAAE;;EAEZ;EACAQ,MAAM,CAACC,cAAc,CAACC,OAAO,CAACC,SAAS,EAAE,SAAS,EAAE;IAClDC,GAAG,EAAE,SAAAA,CAAA,EAAW;MACd,IAAIC,OAAO,GAAG,IAAI;MAClB,IAAIC,UAAU,GAAG,IAAI,CAACA,UAAU;MAChC,IAAIC,GAAG,GAAG,CAAC,CAAC;MAEZ,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,UAAU,CAACG,MAAM,EAAED,CAAC,EAAE,EAAE;QAC1C,IAAIE,SAAS,GAAGJ,UAAU,CAACE,CAAC,CAAC;;QAE7B;QACA;QACA;QACA;QACA,IAAIE,SAAS,IAAIA,SAAS,CAACC,IAAI,IAAK,kBAAkB,CAAEC,IAAI,CAACF,SAAS,CAACC,IAAI,CAAC,EAAE;UAC5E,IAAIA,IAAI,GAAGD,SAAS,CAACC,IAAI;UACzB,IAAIE,KAAK,GAAGH,SAAS,CAACG,KAAK;UAE3B,IAAIC,QAAQ,GAAGH,IAAI,CAACI,MAAM,CAAC,CAAC,CAAC,CAACC,OAAO,CAAC,KAAK,EAAE,UAAUC,IAAI,EAAE;YAC3D,OAAOA,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,EAAE;UACrC,CAAC,CAAC;;UAEF;UACA;UACA;UACA,IAAI,kBAAkB,IAAInB,MAAM,CAACG,SAAS,IAAI,kBAAkB,IAAIH,MAAM,CAACG,SAAS,EAAE;YACpFH,MAAM,CAACC,cAAc,CAACM,GAAG,EAAEO,QAAQ,EAAE;cACnCM,UAAU,EAAE,IAAI;cAChBhB,GAAG,EAAE,YAAW;gBACd,OAAO,IAAI,CAACS,KAAK;cACnB,CAAC,CAACQ,IAAI,CAAC;gBAACR,KAAK,EAAEA,KAAK,IAAI;cAAE,CAAC,CAAC;cAC5BS,GAAG,EAAE,SAASC,MAAMA,CAACZ,IAAI,EAAEE,KAAK,EAAE;gBAChC,IAAI,OAAOA,KAAK,KAAK,WAAW,EAAE;kBAChC,IAAI,CAACf,YAAY,CAACa,IAAI,EAAEE,KAAK,CAAC;gBAChC,CAAC,MAAM;kBACL,IAAI,CAACW,eAAe,CAACb,IAAI,CAAC;gBAC5B;cACF,CAAC,CAACU,IAAI,CAAChB,OAAO,EAAEM,IAAI;YACtB,CAAC,CAAC;UACJ,CAAC,MAAM;YACLJ,GAAG,CAACO,QAAQ,CAAC,GAAGD,KAAK;UACvB;QAEF;MACF;MAEA,OAAON,GAAG;IACZ;EACF,CAAC,CAAC;AAEJ,CAAC,EAAEkB,IAAI,CAAC,QAAQ,KAAK,OAAOC,MAAM,IAAIA,MAAM,IAAI,QAAQ,KAAK,OAAOC,IAAI,IAAIA,IAAI,IAAI,QAAQ,KAAK,OAAOC,MAAM,IAAIA,MAAM,IAAI,CAAC,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}