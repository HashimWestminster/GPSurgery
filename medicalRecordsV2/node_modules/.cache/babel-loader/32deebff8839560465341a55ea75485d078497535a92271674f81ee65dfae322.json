{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thami\\\\Documents\\\\21W- Local Software Dev Group Project\\\\medicalRecordsV2\\\\src\\\\Components\\\\MyBtn.js\",\n  _s = $RefreshSig$();\nimport { Button, Fieldset } from 'govuk-react';\nimport jq from 'jquery';\nimport { CurrentContext } from '../App';\nimport { useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction MyBtn(props) {\n  _s();\n  const currentContext = useContext(CurrentContext);\n  function fetchMedicalRecords(props) {\n    var url_medicalRecords = 'http://localhost:4000/getMedicalRecordsPdo.php';\n    console.log('Sending nhsNumber:', props.nhsNumber); // Can view in console in dev tools on webpage\n\n    jq.ajax({\n      type: \"POST\",\n      url: url_medicalRecords,\n      data: {\n        nhsNumber: props.nhsNumber\n      },\n      success: function (data, textStatus, xhr) {\n        console.log(\"Raw server response:\", xhr.responseText);\n        if (data === \"no patients\") {\n          props.callback(-100);\n        } else {\n          var json = jq.parseJSON(data);\n          props.callback(json[0].NHSNumber); //change NHSnumber to nhsNumber depending on the right dB\n          currentContext.setMedicalRecord(json[0]);\n        }\n        console.log('Updated medicalRecord:', currentContext.medicalRecord);\n      }\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      id: \"submitButton\",\n      onClick: () => fetchMedicalRecords(props),\n      children: \" ViewMedicalRecords \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), currentContext.medicalRecord && /*#__PURE__*/_jsxDEV(Fieldset, {\n      children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n        children: \"Medical Record \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Forename:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 24\n        }, this), \" \", currentContext.medicalRecord.Forename, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Surname:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 24\n        }, this), \" \", currentContext.medicalRecord.Surname, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"NHS Number:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 24\n        }, this), \" \", currentContext.medicalRecord.NHSNumber, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"PersonDOB:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 24\n        }, this), \" \", currentContext.medicalRecord.PersonDOB, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"GenderCode:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 24\n        }, this), \" \", currentContext.medicalRecord.GenderCode, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Postcode:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 24\n        }, this), \" \", currentContext.medicalRecord.Postcode, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n}\n_s(MyBtn, \"kfE+Mm4CXRMTuS4+N/9QPFGSsmU=\");\n_c = MyBtn;\nexport default MyBtn;\nvar _c;\n$RefreshReg$(_c, \"MyBtn\");","map":{"version":3,"names":["Button","Fieldset","jq","CurrentContext","useContext","jsxDEV","_jsxDEV","Fragment","_Fragment","MyBtn","props","_s","currentContext","fetchMedicalRecords","url_medicalRecords","console","log","nhsNumber","ajax","type","url","data","success","textStatus","xhr","responseText","callback","json","parseJSON","NHSNumber","setMedicalRecord","medicalRecord","children","id","onClick","fileName","_jsxFileName","lineNumber","columnNumber","Forename","Surname","PersonDOB","GenderCode","Postcode","_c","$RefreshReg$"],"sources":["C:/Users/thami/Documents/21W- Local Software Dev Group Project/medicalRecordsV2/src/Components/MyBtn.js"],"sourcesContent":["import { Button, Fieldset } from 'govuk-react';\r\nimport jq from 'jquery';\r\nimport { CurrentContext } from '../App';\r\nimport { useContext } from 'react';\r\n\r\nfunction MyBtn(props) {\r\n    \r\n    const currentContext = useContext(CurrentContext);\r\n\r\n    function fetchMedicalRecords(props) {\r\n\r\n        var url_medicalRecords = 'http://localhost:4000/getMedicalRecordsPdo.php';\r\n\r\n        console.log('Sending nhsNumber:', props.nhsNumber); // Can view in console in dev tools on webpage\r\n\r\n\r\n        jq.ajax(\r\n            {\r\n                type: \"POST\",\r\n                url: url_medicalRecords,\r\n                data:{nhsNumber: props.nhsNumber},\r\n                success: function (data, textStatus, xhr) {\r\n                    console.log(\"Raw server response:\", xhr.responseText);\r\n                    if (data === \"no patients\") {\r\n                        props.callback(-100);\r\n                    } else {\r\n                        var json = jq.parseJSON(data);\r\n                        props.callback(json[0].NHSNumber);    //change NHSnumber to nhsNumber depending on the right dB\r\n                        currentContext.setMedicalRecord(json[0]);\r\n                    }\r\n                    console.log('Updated medicalRecord:', currentContext.medicalRecord);\r\n                }\r\n            }\r\n        );\r\n        \r\n\r\n       \r\n            \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Button id=\"submitButton\" onClick={() => fetchMedicalRecords(props)}> ViewMedicalRecords </Button>\r\n            {currentContext.medicalRecord && (\r\n                <Fieldset>\r\n                    <legend>Medical Record </legend>\r\n                    <p><strong>Forename:</strong> {currentContext.medicalRecord.Forename} </p>\r\n                    <p><strong>Surname:</strong> {currentContext.medicalRecord.Surname} </p>\r\n                    <p><strong>NHS Number:</strong> {currentContext.medicalRecord.NHSNumber} </p>\r\n                    <p><strong>PersonDOB:</strong> {currentContext.medicalRecord.PersonDOB} </p>\r\n                    <p><strong>GenderCode:</strong> {currentContext.medicalRecord.GenderCode} </p>\r\n                    <p><strong>Postcode:</strong> {currentContext.medicalRecord.Postcode} </p>\r\n                    {/* Add other fields from the medical record */}\r\n                </Fieldset>\r\n            )}\r\n        </>\r\n    );\r\n }\r\n\r\nexport default MyBtn;\r\n"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,QAAQ,QAAQ,aAAa;AAC9C,OAAOC,EAAE,MAAM,QAAQ;AACvB,SAASC,cAAc,QAAQ,QAAQ;AACvC,SAASC,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEnC,SAASC,KAAKA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAElB,MAAMC,cAAc,GAAGR,UAAU,CAACD,cAAc,CAAC;EAEjD,SAASU,mBAAmBA,CAACH,KAAK,EAAE;IAEhC,IAAII,kBAAkB,GAAG,gDAAgD;IAEzEC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEN,KAAK,CAACO,SAAS,CAAC,CAAC,CAAC;;IAGpDf,EAAE,CAACgB,IAAI,CACH;MACIC,IAAI,EAAE,MAAM;MACZC,GAAG,EAAEN,kBAAkB;MACvBO,IAAI,EAAC;QAACJ,SAAS,EAAEP,KAAK,CAACO;MAAS,CAAC;MACjCK,OAAO,EAAE,SAAAA,CAAUD,IAAI,EAAEE,UAAU,EAAEC,GAAG,EAAE;QACtCT,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEQ,GAAG,CAACC,YAAY,CAAC;QACrD,IAAIJ,IAAI,KAAK,aAAa,EAAE;UACxBX,KAAK,CAACgB,QAAQ,CAAC,CAAC,GAAG,CAAC;QACxB,CAAC,MAAM;UACH,IAAIC,IAAI,GAAGzB,EAAE,CAAC0B,SAAS,CAACP,IAAI,CAAC;UAC7BX,KAAK,CAACgB,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CAACE,SAAS,CAAC,CAAC,CAAI;UACtCjB,cAAc,CAACkB,gBAAgB,CAACH,IAAI,CAAC,CAAC,CAAC,CAAC;QAC5C;QACAZ,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEJ,cAAc,CAACmB,aAAa,CAAC;MACvE;IACJ,CAAC,CACJ;EAKL;EAEA,oBACIzB,OAAA,CAAAE,SAAA;IAAAwB,QAAA,gBACI1B,OAAA,CAACN,MAAM;MAACiC,EAAE,EAAC,cAAc;MAACC,OAAO,EAAEA,CAAA,KAAMrB,mBAAmB,CAACH,KAAK,CAAE;MAAAsB,QAAA,EAAC;IAAoB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,EACjG1B,cAAc,CAACmB,aAAa,iBACzBzB,OAAA,CAACL,QAAQ;MAAA+B,QAAA,gBACL1B,OAAA;QAAA0B,QAAA,EAAQ;MAAe;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,eAChChC,OAAA;QAAA0B,QAAA,gBAAG1B,OAAA;UAAA0B,QAAA,EAAQ;QAAS;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS,KAAC,EAAC1B,cAAc,CAACmB,aAAa,CAACQ,QAAQ,EAAC,GAAC;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI,eAC1EhC,OAAA;QAAA0B,QAAA,gBAAG1B,OAAA;UAAA0B,QAAA,EAAQ;QAAQ;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS,KAAC,EAAC1B,cAAc,CAACmB,aAAa,CAACS,OAAO,EAAC,GAAC;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI,eACxEhC,OAAA;QAAA0B,QAAA,gBAAG1B,OAAA;UAAA0B,QAAA,EAAQ;QAAW;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS,KAAC,EAAC1B,cAAc,CAACmB,aAAa,CAACF,SAAS,EAAC,GAAC;MAAA;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI,eAC7EhC,OAAA;QAAA0B,QAAA,gBAAG1B,OAAA;UAAA0B,QAAA,EAAQ;QAAU;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS,KAAC,EAAC1B,cAAc,CAACmB,aAAa,CAACU,SAAS,EAAC,GAAC;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI,eAC5EhC,OAAA;QAAA0B,QAAA,gBAAG1B,OAAA;UAAA0B,QAAA,EAAQ;QAAW;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS,KAAC,EAAC1B,cAAc,CAACmB,aAAa,CAACW,UAAU,EAAC,GAAC;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI,eAC9EhC,OAAA;QAAA0B,QAAA,gBAAG1B,OAAA;UAAA0B,QAAA,EAAQ;QAAS;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS,KAAC,EAAC1B,cAAc,CAACmB,aAAa,CAACY,QAAQ,EAAC,GAAC;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAGjF;EAAA,gBACF;AAEV;AAAC3B,EAAA,CApDOF,KAAK;AAAAmC,EAAA,GAALnC,KAAK;AAsDd,eAAeA,KAAK;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}