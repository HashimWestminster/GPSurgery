{"ast":null,"code":"import '../vendor/polyfills/Element/prototype/dataset.mjs';\nimport '../vendor/polyfills/String/prototype/trim.mjs';\n\n/* eslint-disable es-x/no-string-prototype-trim -- Polyfill imported */\n\n/**\n * Normalise string\n *\n * 'If it looks like a duck, and it quacks like a duckâ€¦' ðŸ¦†\n *\n * If the passed value looks like a boolean or a number, convert it to a boolean\n * or number.\n *\n * Designed to be used to convert config passed via data attributes (which are\n * always strings) into something sensible.\n *\n * @deprecated Will be made private in v5.0\n * @param {string} value - The value to normalise\n * @returns {string | boolean | number | undefined} Normalised data\n */\nfunction normaliseString(value) {\n  if (typeof value !== 'string') {\n    return value;\n  }\n  var trimmedValue = value.trim();\n  if (trimmedValue === 'true') {\n    return true;\n  }\n  if (trimmedValue === 'false') {\n    return false;\n  }\n\n  // Empty / whitespace-only strings are considered finite so we need to check\n  // the length of the trimmed string as well\n  if (trimmedValue.length > 0 && isFinite(Number(trimmedValue))) {\n    return Number(trimmedValue);\n  }\n  return value;\n}\n\n/**\n * Normalise dataset\n *\n * Loop over an object and normalise each value using normaliseData function\n *\n * @deprecated Will be made private in v5.0\n * @param {DOMStringMap} dataset - HTML element dataset\n * @returns {Object<string, unknown>} Normalised dataset\n */\nfunction normaliseDataset(dataset) {\n  /** @type {Object<string, unknown>} */\n  var out = {};\n  for (var key in dataset) {\n    out[key] = normaliseString(dataset[key]);\n  }\n  return out;\n}\nexport { normaliseString, normaliseDataset };","map":{"version":3,"names":["normaliseString","value","trimmedValue","trim","length","isFinite","Number","normaliseDataset","dataset","out","key"],"sources":["C:/Users/thami/Documents/21W- Local Software Dev Group Project/medicalRecordsV2/node_modules/govuk-frontend/govuk-esm/common/normalise-dataset.mjs"],"sourcesContent":["import '../vendor/polyfills/Element/prototype/dataset.mjs';\nimport '../vendor/polyfills/String/prototype/trim.mjs';\n\n/* eslint-disable es-x/no-string-prototype-trim -- Polyfill imported */\n\n/**\n * Normalise string\n *\n * 'If it looks like a duck, and it quacks like a duckâ€¦' ðŸ¦†\n *\n * If the passed value looks like a boolean or a number, convert it to a boolean\n * or number.\n *\n * Designed to be used to convert config passed via data attributes (which are\n * always strings) into something sensible.\n *\n * @deprecated Will be made private in v5.0\n * @param {string} value - The value to normalise\n * @returns {string | boolean | number | undefined} Normalised data\n */\nfunction normaliseString (value) {\n  if (typeof value !== 'string') {\n    return value\n  }\n\n  var trimmedValue = value.trim();\n\n  if (trimmedValue === 'true') {\n    return true\n  }\n\n  if (trimmedValue === 'false') {\n    return false\n  }\n\n  // Empty / whitespace-only strings are considered finite so we need to check\n  // the length of the trimmed string as well\n  if (trimmedValue.length > 0 && isFinite(Number(trimmedValue))) {\n    return Number(trimmedValue)\n  }\n\n  return value\n}\n\n/**\n * Normalise dataset\n *\n * Loop over an object and normalise each value using normaliseData function\n *\n * @deprecated Will be made private in v5.0\n * @param {DOMStringMap} dataset - HTML element dataset\n * @returns {Object<string, unknown>} Normalised dataset\n */\nfunction normaliseDataset (dataset) {\n  /** @type {Object<string, unknown>} */\n  var out = {};\n\n  for (var key in dataset) {\n    out[key] = normaliseString(dataset[key]);\n  }\n\n  return out\n}\n\nexport { normaliseString, normaliseDataset };\n//# sourceMappingURL=common/normalise-dataset.mjs.map\n"],"mappings":"AAAA,OAAO,mDAAmD;AAC1D,OAAO,+CAA+C;;AAEtD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,eAAeA,CAAEC,KAAK,EAAE;EAC/B,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;IAC7B,OAAOA,KAAK;EACd;EAEA,IAAIC,YAAY,GAAGD,KAAK,CAACE,IAAI,EAAE;EAE/B,IAAID,YAAY,KAAK,MAAM,EAAE;IAC3B,OAAO,IAAI;EACb;EAEA,IAAIA,YAAY,KAAK,OAAO,EAAE;IAC5B,OAAO,KAAK;EACd;;EAEA;EACA;EACA,IAAIA,YAAY,CAACE,MAAM,GAAG,CAAC,IAAIC,QAAQ,CAACC,MAAM,CAACJ,YAAY,CAAC,CAAC,EAAE;IAC7D,OAAOI,MAAM,CAACJ,YAAY,CAAC;EAC7B;EAEA,OAAOD,KAAK;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASM,gBAAgBA,CAAEC,OAAO,EAAE;EAClC;EACA,IAAIC,GAAG,GAAG,CAAC,CAAC;EAEZ,KAAK,IAAIC,GAAG,IAAIF,OAAO,EAAE;IACvBC,GAAG,CAACC,GAAG,CAAC,GAAGV,eAAe,CAACQ,OAAO,CAACE,GAAG,CAAC,CAAC;EAC1C;EAEA,OAAOD,GAAG;AACZ;AAEA,SAAST,eAAe,EAAEO,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}