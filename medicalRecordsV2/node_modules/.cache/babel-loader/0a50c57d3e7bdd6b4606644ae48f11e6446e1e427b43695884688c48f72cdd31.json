{"ast":null,"code":"import '../../vendor/polyfills/Element/prototype/classList.mjs';\nimport '../../vendor/polyfills/Event.mjs';\nimport '../../vendor/polyfills/Function/prototype/bind.mjs';\n\n/* eslint-disable es-x/no-function-prototype-bind -- Polyfill imported */\n\n/**\n * Skip link component\n *\n * @class\n * @param {Element} $module - HTML element to use for skip link\n */\nfunction SkipLink($module) {\n  if (!($module instanceof HTMLAnchorElement)) {\n    return this;\n  }\n\n  /** @deprecated Will be made private in v5.0 */\n  this.$module = $module;\n\n  /** @deprecated Will be made private in v5.0 */\n  this.$linkedElement = null;\n\n  /** @deprecated Will be made private in v5.0 */\n  this.linkedElementListener = false;\n}\n\n/**\n * Initialise component\n */\nSkipLink.prototype.init = function () {\n  // Check that required elements are present\n  if (!this.$module) {\n    return;\n  }\n\n  // Check for linked element\n  var $linkedElement = this.getLinkedElement();\n  if (!$linkedElement) {\n    return;\n  }\n  this.$linkedElement = $linkedElement;\n  this.$module.addEventListener('click', this.focusLinkedElement.bind(this));\n};\n\n/**\n * Get linked element\n *\n * @deprecated Will be made private in v5.0\n * @returns {HTMLElement | null} $linkedElement - DOM element linked to from the skip link\n */\nSkipLink.prototype.getLinkedElement = function () {\n  var linkedElementId = this.getFragmentFromUrl();\n  if (!linkedElementId) {\n    return null;\n  }\n  return document.getElementById(linkedElementId);\n};\n\n/**\n * Focus the linked element\n *\n * Set tabindex and helper CSS class. Set listener to remove them on blur.\n *\n * @deprecated Will be made private in v5.0\n */\nSkipLink.prototype.focusLinkedElement = function () {\n  var $linkedElement = this.$linkedElement;\n  if (!$linkedElement.getAttribute('tabindex')) {\n    // Set the element tabindex to -1 so it can be focused with JavaScript.\n    $linkedElement.setAttribute('tabindex', '-1');\n    $linkedElement.classList.add('govuk-skip-link-focused-element');\n\n    // Add listener for blur on the focused element (unless the listener has previously been added)\n    if (!this.linkedElementListener) {\n      this.$linkedElement.addEventListener('blur', this.removeFocusProperties.bind(this));\n      this.linkedElementListener = true;\n    }\n  }\n  $linkedElement.focus();\n};\n\n/**\n * Remove the tabindex that makes the linked element focusable because the element only needs to be\n * focusable until it has received programmatic focus and a screen reader has announced it.\n *\n * Remove the CSS class that removes the native focus styles.\n *\n * @deprecated Will be made private in v5.0\n */\nSkipLink.prototype.removeFocusProperties = function () {\n  this.$linkedElement.removeAttribute('tabindex');\n  this.$linkedElement.classList.remove('govuk-skip-link-focused-element');\n};\n\n/**\n * Get fragment from URL\n *\n * Extract the fragment (everything after the hash symbol) from a URL, but not including\n * the symbol.\n *\n * @deprecated Will be made private in v5.0\n * @returns {string | undefined} Fragment from URL, without the hash symbol\n */\nSkipLink.prototype.getFragmentFromUrl = function () {\n  // Bail if the anchor link doesn't have a hash\n  if (!this.$module.hash) {\n    return;\n  }\n  return this.$module.hash.split('#').pop();\n};\nexport default SkipLink;","map":{"version":3,"names":["SkipLink","$module","HTMLAnchorElement","$linkedElement","linkedElementListener","prototype","init","getLinkedElement","addEventListener","focusLinkedElement","bind","linkedElementId","getFragmentFromUrl","document","getElementById","getAttribute","setAttribute","classList","add","removeFocusProperties","focus","removeAttribute","remove","hash","split","pop"],"sources":["C:/Users/thami/Documents/21W- Local Software Dev Group Project/medicalRecordsV2/node_modules/govuk-frontend/govuk-esm/components/skip-link/skip-link.mjs"],"sourcesContent":["import '../../vendor/polyfills/Element/prototype/classList.mjs';\nimport '../../vendor/polyfills/Event.mjs';\nimport '../../vendor/polyfills/Function/prototype/bind.mjs';\n\n/* eslint-disable es-x/no-function-prototype-bind -- Polyfill imported */\n\n/**\n * Skip link component\n *\n * @class\n * @param {Element} $module - HTML element to use for skip link\n */\nfunction SkipLink ($module) {\n  if (!($module instanceof HTMLAnchorElement)) {\n    return this\n  }\n\n  /** @deprecated Will be made private in v5.0 */\n  this.$module = $module;\n\n  /** @deprecated Will be made private in v5.0 */\n  this.$linkedElement = null;\n\n  /** @deprecated Will be made private in v5.0 */\n  this.linkedElementListener = false;\n}\n\n/**\n * Initialise component\n */\nSkipLink.prototype.init = function () {\n  // Check that required elements are present\n  if (!this.$module) {\n    return\n  }\n\n  // Check for linked element\n  var $linkedElement = this.getLinkedElement();\n  if (!$linkedElement) {\n    return\n  }\n\n  this.$linkedElement = $linkedElement;\n  this.$module.addEventListener('click', this.focusLinkedElement.bind(this));\n};\n\n/**\n * Get linked element\n *\n * @deprecated Will be made private in v5.0\n * @returns {HTMLElement | null} $linkedElement - DOM element linked to from the skip link\n */\nSkipLink.prototype.getLinkedElement = function () {\n  var linkedElementId = this.getFragmentFromUrl();\n  if (!linkedElementId) {\n    return null\n  }\n\n  return document.getElementById(linkedElementId)\n};\n\n/**\n * Focus the linked element\n *\n * Set tabindex and helper CSS class. Set listener to remove them on blur.\n *\n * @deprecated Will be made private in v5.0\n */\nSkipLink.prototype.focusLinkedElement = function () {\n  var $linkedElement = this.$linkedElement;\n\n  if (!$linkedElement.getAttribute('tabindex')) {\n    // Set the element tabindex to -1 so it can be focused with JavaScript.\n    $linkedElement.setAttribute('tabindex', '-1');\n    $linkedElement.classList.add('govuk-skip-link-focused-element');\n\n    // Add listener for blur on the focused element (unless the listener has previously been added)\n    if (!this.linkedElementListener) {\n      this.$linkedElement.addEventListener('blur', this.removeFocusProperties.bind(this));\n      this.linkedElementListener = true;\n    }\n  }\n\n  $linkedElement.focus();\n};\n\n/**\n * Remove the tabindex that makes the linked element focusable because the element only needs to be\n * focusable until it has received programmatic focus and a screen reader has announced it.\n *\n * Remove the CSS class that removes the native focus styles.\n *\n * @deprecated Will be made private in v5.0\n */\nSkipLink.prototype.removeFocusProperties = function () {\n  this.$linkedElement.removeAttribute('tabindex');\n  this.$linkedElement.classList.remove('govuk-skip-link-focused-element');\n};\n\n/**\n * Get fragment from URL\n *\n * Extract the fragment (everything after the hash symbol) from a URL, but not including\n * the symbol.\n *\n * @deprecated Will be made private in v5.0\n * @returns {string | undefined} Fragment from URL, without the hash symbol\n */\nSkipLink.prototype.getFragmentFromUrl = function () {\n  // Bail if the anchor link doesn't have a hash\n  if (!this.$module.hash) {\n    return\n  }\n\n  return this.$module.hash.split('#').pop()\n};\n\nexport default SkipLink;\n//# sourceMappingURL=components/skip-link/skip-link.mjs.map\n"],"mappings":"AAAA,OAAO,wDAAwD;AAC/D,OAAO,kCAAkC;AACzC,OAAO,oDAAoD;;AAE3D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,QAAQA,CAAEC,OAAO,EAAE;EAC1B,IAAI,EAAEA,OAAO,YAAYC,iBAAiB,CAAC,EAAE;IAC3C,OAAO,IAAI;EACb;;EAEA;EACA,IAAI,CAACD,OAAO,GAAGA,OAAO;;EAEtB;EACA,IAAI,CAACE,cAAc,GAAG,IAAI;;EAE1B;EACA,IAAI,CAACC,qBAAqB,GAAG,KAAK;AACpC;;AAEA;AACA;AACA;AACAJ,QAAQ,CAACK,SAAS,CAACC,IAAI,GAAG,YAAY;EACpC;EACA,IAAI,CAAC,IAAI,CAACL,OAAO,EAAE;IACjB;EACF;;EAEA;EACA,IAAIE,cAAc,GAAG,IAAI,CAACI,gBAAgB,EAAE;EAC5C,IAAI,CAACJ,cAAc,EAAE;IACnB;EACF;EAEA,IAAI,CAACA,cAAc,GAAGA,cAAc;EACpC,IAAI,CAACF,OAAO,CAACO,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAACC,kBAAkB,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC5E,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACAV,QAAQ,CAACK,SAAS,CAACE,gBAAgB,GAAG,YAAY;EAChD,IAAII,eAAe,GAAG,IAAI,CAACC,kBAAkB,EAAE;EAC/C,IAAI,CAACD,eAAe,EAAE;IACpB,OAAO,IAAI;EACb;EAEA,OAAOE,QAAQ,CAACC,cAAc,CAACH,eAAe,CAAC;AACjD,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACAX,QAAQ,CAACK,SAAS,CAACI,kBAAkB,GAAG,YAAY;EAClD,IAAIN,cAAc,GAAG,IAAI,CAACA,cAAc;EAExC,IAAI,CAACA,cAAc,CAACY,YAAY,CAAC,UAAU,CAAC,EAAE;IAC5C;IACAZ,cAAc,CAACa,YAAY,CAAC,UAAU,EAAE,IAAI,CAAC;IAC7Cb,cAAc,CAACc,SAAS,CAACC,GAAG,CAAC,iCAAiC,CAAC;;IAE/D;IACA,IAAI,CAAC,IAAI,CAACd,qBAAqB,EAAE;MAC/B,IAAI,CAACD,cAAc,CAACK,gBAAgB,CAAC,MAAM,EAAE,IAAI,CAACW,qBAAqB,CAACT,IAAI,CAAC,IAAI,CAAC,CAAC;MACnF,IAAI,CAACN,qBAAqB,GAAG,IAAI;IACnC;EACF;EAEAD,cAAc,CAACiB,KAAK,EAAE;AACxB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACApB,QAAQ,CAACK,SAAS,CAACc,qBAAqB,GAAG,YAAY;EACrD,IAAI,CAAChB,cAAc,CAACkB,eAAe,CAAC,UAAU,CAAC;EAC/C,IAAI,CAAClB,cAAc,CAACc,SAAS,CAACK,MAAM,CAAC,iCAAiC,CAAC;AACzE,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAtB,QAAQ,CAACK,SAAS,CAACO,kBAAkB,GAAG,YAAY;EAClD;EACA,IAAI,CAAC,IAAI,CAACX,OAAO,CAACsB,IAAI,EAAE;IACtB;EACF;EAEA,OAAO,IAAI,CAACtB,OAAO,CAACsB,IAAI,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,EAAE;AAC3C,CAAC;AAED,eAAezB,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}