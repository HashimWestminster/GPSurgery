{"ast":null,"code":"import '../../vendor/polyfills/Event.mjs';\nimport '../../vendor/polyfills/Function/prototype/bind.mjs';\n\n/* eslint-disable es-x/no-function-prototype-bind -- Polyfill imported */\n\n/**\n * Header component\n *\n * @class\n * @param {Element} $module - HTML element to use for header\n */\nfunction Header($module) {\n  if (!($module instanceof HTMLElement)) {\n    return this;\n  }\n\n  /** @deprecated Will be made private in v5.0 */\n  this.$module = $module;\n\n  /** @deprecated Will be made private in v5.0 */\n  this.$menuButton = $module.querySelector('.govuk-js-header-toggle');\n\n  /** @deprecated Will be made private in v5.0 */\n  this.$menu = this.$menuButton && $module.querySelector('#' + this.$menuButton.getAttribute('aria-controls'));\n\n  /**\n   * Save the opened/closed state for the nav in memory so that we can\n   * accurately maintain state when the screen is changed from small to\n   * big and back to small\n   *\n   * @deprecated Will be made private in v5.0\n   */\n  this.menuIsOpen = false;\n\n  /**\n   * A global const for storing a matchMedia instance which we'll use to\n   * detect when a screen size change happens. We set this later during the\n   * init function and rely on it being null if the feature isn't available\n   * to initially apply hidden attributes\n   *\n   * @deprecated Will be made private in v5.0\n   */\n  this.mql = null;\n}\n\n/**\n * Initialise component\n *\n * Check for the presence of the header, menu and menu button – if any are\n * missing then there's nothing to do so return early.\n * Feature sniff for and apply a matchMedia for desktop which will\n * trigger a state sync if the browser viewport moves between states. If\n * matchMedia isn't available, hide the menu button and present the \"no js\"\n * version of the menu to the user.\n */\nHeader.prototype.init = function () {\n  // Check that required elements are present\n  if (!this.$module || !this.$menuButton || !this.$menu) {\n    return;\n  }\n  if ('matchMedia' in window) {\n    // Set the matchMedia to the govuk-frontend desktop breakpoint\n    this.mql = window.matchMedia('(min-width: 48.0625em)');\n    if ('addEventListener' in this.mql) {\n      this.mql.addEventListener('change', this.syncState.bind(this));\n    } else {\n      // addListener is a deprecated function, however addEventListener\n      // isn't supported by IE or Safari < 14. We therefore add this in as\n      // a fallback for those browsers\n      // @ts-expect-error Property 'addListener' does not exist\n      this.mql.addListener(this.syncState.bind(this));\n    }\n    this.syncState();\n    this.$menuButton.addEventListener('click', this.handleMenuButtonClick.bind(this));\n  } else {\n    this.$menuButton.setAttribute('hidden', '');\n  }\n};\n\n/**\n * Sync menu state\n *\n * Uses the global variable menuIsOpen to correctly set the accessible and\n * visual states of the menu and the menu button.\n * Additionally will force the menu to be visible and the menu button to be\n * hidden if the matchMedia is triggered to desktop.\n *\n * @deprecated Will be made private in v5.0\n */\nHeader.prototype.syncState = function () {\n  if (this.mql.matches) {\n    this.$menu.removeAttribute('hidden');\n    this.$menuButton.setAttribute('hidden', '');\n  } else {\n    this.$menuButton.removeAttribute('hidden');\n    this.$menuButton.setAttribute('aria-expanded', this.menuIsOpen.toString());\n    if (this.menuIsOpen) {\n      this.$menu.removeAttribute('hidden');\n    } else {\n      this.$menu.setAttribute('hidden', '');\n    }\n  }\n};\n\n/**\n * Handle menu button click\n *\n * When the menu button is clicked, change the visibility of the menu and then\n * sync the accessibility state and menu button state\n *\n * @deprecated Will be made private in v5.0\n */\nHeader.prototype.handleMenuButtonClick = function () {\n  this.menuIsOpen = !this.menuIsOpen;\n  this.syncState();\n};\nexport default Header;","map":{"version":3,"names":["Header","$module","HTMLElement","$menuButton","querySelector","$menu","getAttribute","menuIsOpen","mql","prototype","init","window","matchMedia","addEventListener","syncState","bind","addListener","handleMenuButtonClick","setAttribute","matches","removeAttribute","toString"],"sources":["C:/Users/thami/Documents/21W- Local Software Dev Group Project/medicalRecordsV2/node_modules/govuk-frontend/govuk-esm/components/header/header.mjs"],"sourcesContent":["import '../../vendor/polyfills/Event.mjs';\nimport '../../vendor/polyfills/Function/prototype/bind.mjs';\n\n/* eslint-disable es-x/no-function-prototype-bind -- Polyfill imported */\n\n/**\n * Header component\n *\n * @class\n * @param {Element} $module - HTML element to use for header\n */\nfunction Header ($module) {\n  if (!($module instanceof HTMLElement)) {\n    return this\n  }\n\n  /** @deprecated Will be made private in v5.0 */\n  this.$module = $module;\n\n  /** @deprecated Will be made private in v5.0 */\n  this.$menuButton = $module.querySelector('.govuk-js-header-toggle');\n\n  /** @deprecated Will be made private in v5.0 */\n  this.$menu = this.$menuButton && $module.querySelector(\n    '#' + this.$menuButton.getAttribute('aria-controls')\n  );\n\n  /**\n   * Save the opened/closed state for the nav in memory so that we can\n   * accurately maintain state when the screen is changed from small to\n   * big and back to small\n   *\n   * @deprecated Will be made private in v5.0\n   */\n  this.menuIsOpen = false;\n\n  /**\n   * A global const for storing a matchMedia instance which we'll use to\n   * detect when a screen size change happens. We set this later during the\n   * init function and rely on it being null if the feature isn't available\n   * to initially apply hidden attributes\n   *\n   * @deprecated Will be made private in v5.0\n   */\n  this.mql = null;\n}\n\n/**\n * Initialise component\n *\n * Check for the presence of the header, menu and menu button – if any are\n * missing then there's nothing to do so return early.\n * Feature sniff for and apply a matchMedia for desktop which will\n * trigger a state sync if the browser viewport moves between states. If\n * matchMedia isn't available, hide the menu button and present the \"no js\"\n * version of the menu to the user.\n */\nHeader.prototype.init = function () {\n  // Check that required elements are present\n  if (!this.$module || !this.$menuButton || !this.$menu) {\n    return\n  }\n\n  if ('matchMedia' in window) {\n    // Set the matchMedia to the govuk-frontend desktop breakpoint\n    this.mql = window.matchMedia('(min-width: 48.0625em)');\n\n    if ('addEventListener' in this.mql) {\n      this.mql.addEventListener('change', this.syncState.bind(this));\n    } else {\n      // addListener is a deprecated function, however addEventListener\n      // isn't supported by IE or Safari < 14. We therefore add this in as\n      // a fallback for those browsers\n      // @ts-expect-error Property 'addListener' does not exist\n      this.mql.addListener(this.syncState.bind(this));\n    }\n\n    this.syncState();\n    this.$menuButton.addEventListener('click', this.handleMenuButtonClick.bind(this));\n  } else {\n    this.$menuButton.setAttribute('hidden', '');\n  }\n};\n\n/**\n * Sync menu state\n *\n * Uses the global variable menuIsOpen to correctly set the accessible and\n * visual states of the menu and the menu button.\n * Additionally will force the menu to be visible and the menu button to be\n * hidden if the matchMedia is triggered to desktop.\n *\n * @deprecated Will be made private in v5.0\n */\nHeader.prototype.syncState = function () {\n  if (this.mql.matches) {\n    this.$menu.removeAttribute('hidden');\n    this.$menuButton.setAttribute('hidden', '');\n  } else {\n    this.$menuButton.removeAttribute('hidden');\n    this.$menuButton.setAttribute('aria-expanded', this.menuIsOpen.toString());\n\n    if (this.menuIsOpen) {\n      this.$menu.removeAttribute('hidden');\n    } else {\n      this.$menu.setAttribute('hidden', '');\n    }\n  }\n};\n\n/**\n * Handle menu button click\n *\n * When the menu button is clicked, change the visibility of the menu and then\n * sync the accessibility state and menu button state\n *\n * @deprecated Will be made private in v5.0\n */\nHeader.prototype.handleMenuButtonClick = function () {\n  this.menuIsOpen = !this.menuIsOpen;\n  this.syncState();\n};\n\nexport default Header;\n//# sourceMappingURL=components/header/header.mjs.map\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}