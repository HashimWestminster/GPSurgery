{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thami\\\\Documents\\\\21W- Local Software Dev Group Project\\\\medicalRecordsV2\\\\src\\\\Components\\\\MyBtn.js\",\n  _s = $RefreshSig$();\nimport { Button } from 'govuk-react';\nimport jq from 'jquery';\nimport { CurrentContext } from '../App';\nimport { useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction MyBtn(props) {\n  _s();\n  var nhsNumberData = {\n    \"nhsNumber\": props.nhsNumber\n  };\n  const currentContext = useContext(CurrentContext);\n  function fetchMedicalRecords(props) {\n    var url_medicalRecords = 'http://localhost:4000/getMedicalRecordsPdo.php';\n    jq.ajax({\n      type: \"POST\",\n      url: url_medicalRecords,\n      data: nhsNumberData,\n      success(data) {\n        if (data === \"no patients\") {\n          props.callback(-100);\n        } else {\n          var json = jq.parseJSON(data);\n          props.callback(json[0].nhsNumber);\n          currentContext.setMedicalRecord(json[0]);\n        }\n      }\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      id: \"submitButton\",\n      onClick: () => fetchMedicalRecords(props),\n      children: \" ViewMedicalRecords \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), currentContext.medicalRecord && /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n        children: \"Medical Record \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Forename:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 24\n        }, this), \" \", currentContext.medicalRecord.forename, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Surname:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 24\n        }, this), \" \", currentContext.medicalRecord.surname, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"NHS Number:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 24\n        }, this), \" \", currentContext.medicalRecord.nhsNumber, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n}\n_s(MyBtn, \"kfE+Mm4CXRMTuS4+N/9QPFGSsmU=\");\n_c = MyBtn;\nexport default MyBtn;\nvar _c;\n$RefreshReg$(_c, \"MyBtn\");","map":{"version":3,"names":["Button","jq","CurrentContext","useContext","jsxDEV","_jsxDEV","Fragment","_Fragment","MyBtn","props","_s","nhsNumberData","nhsNumber","currentContext","fetchMedicalRecords","url_medicalRecords","ajax","type","url","data","success","callback","json","parseJSON","setMedicalRecord","children","id","onClick","fileName","_jsxFileName","lineNumber","columnNumber","medicalRecord","forename","surname","_c","$RefreshReg$"],"sources":["C:/Users/thami/Documents/21W- Local Software Dev Group Project/medicalRecordsV2/src/Components/MyBtn.js"],"sourcesContent":["import { Button } from 'govuk-react';\r\nimport jq from 'jquery';\r\nimport { CurrentContext } from '../App';\r\nimport { useContext } from 'react';\r\n\r\nfunction MyBtn(props) {\r\n    var nhsNumberData = { \"nhsNumber\": props.nhsNumber }\r\n    const currentContext = useContext(CurrentContext);\r\n\r\n    function fetchMedicalRecords(props) {\r\n        var url_medicalRecords = 'http://localhost:4000/getMedicalRecordsPdo.php';\r\n\r\n        \r\n\r\n        jq.ajax(\r\n            {\r\n                type: \"POST\",\r\n                url: url_medicalRecords,\r\n                data: nhsNumberData,\r\n                success(data) {\r\n                    if (data === \"no patients\") {\r\n                        props.callback(-100);\r\n                    } else {\r\n                        var json = jq.parseJSON(data);\r\n                        props.callback(json[0].nhsNumber);\r\n                        currentContext.setMedicalRecord(json[0]);\r\n                    }\r\n                }\r\n            }\r\n        );\r\n        \r\n\r\n       \r\n            \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Button id=\"submitButton\" onClick={() => fetchMedicalRecords(props)}> ViewMedicalRecords </Button>\r\n            {currentContext.medicalRecord && (\r\n                <fieldset>\r\n                    <legend>Medical Record </legend>\r\n                    <p><strong>Forename:</strong> {currentContext.medicalRecord.forename} </p>\r\n                    <p><strong>Surname:</strong> {currentContext.medicalRecord.surname} </p>\r\n                    <p><strong>NHS Number:</strong> {currentContext.medicalRecord.nhsNumber} </p>\r\n                    {/* Add other fields from the medical record */}\r\n                </fieldset>\r\n            )}\r\n        </>\r\n    );\r\n }\r\n\r\nexport default MyBtn;\r\n"],"mappings":";;AAAA,SAASA,MAAM,QAAQ,aAAa;AACpC,OAAOC,EAAE,MAAM,QAAQ;AACvB,SAASC,cAAc,QAAQ,QAAQ;AACvC,SAASC,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEnC,SAASC,KAAKA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAClB,IAAIC,aAAa,GAAG;IAAE,WAAW,EAAEF,KAAK,CAACG;EAAU,CAAC;EACpD,MAAMC,cAAc,GAAGV,UAAU,CAACD,cAAc,CAAC;EAEjD,SAASY,mBAAmBA,CAACL,KAAK,EAAE;IAChC,IAAIM,kBAAkB,GAAG,gDAAgD;IAIzEd,EAAE,CAACe,IAAI,CACH;MACIC,IAAI,EAAE,MAAM;MACZC,GAAG,EAAEH,kBAAkB;MACvBI,IAAI,EAAER,aAAa;MACnBS,OAAOA,CAACD,IAAI,EAAE;QACV,IAAIA,IAAI,KAAK,aAAa,EAAE;UACxBV,KAAK,CAACY,QAAQ,CAAC,CAAC,GAAG,CAAC;QACxB,CAAC,MAAM;UACH,IAAIC,IAAI,GAAGrB,EAAE,CAACsB,SAAS,CAACJ,IAAI,CAAC;UAC7BV,KAAK,CAACY,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CAACV,SAAS,CAAC;UACjCC,cAAc,CAACW,gBAAgB,CAACF,IAAI,CAAC,CAAC,CAAC,CAAC;QAC5C;MACJ;IACJ,CAAC,CACJ;EAKL;EAEA,oBACIjB,OAAA,CAAAE,SAAA;IAAAkB,QAAA,gBACIpB,OAAA,CAACL,MAAM;MAAC0B,EAAE,EAAC,cAAc;MAACC,OAAO,EAAEA,CAAA,KAAMb,mBAAmB,CAACL,KAAK,CAAE;MAAAgB,QAAA,EAAC;IAAoB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,EACjGlB,cAAc,CAACmB,aAAa,iBACzB3B,OAAA;MAAAoB,QAAA,gBACIpB,OAAA;QAAAoB,QAAA,EAAQ;MAAe;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,eAChC1B,OAAA;QAAAoB,QAAA,gBAAGpB,OAAA;UAAAoB,QAAA,EAAQ;QAAS;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS,KAAC,EAAClB,cAAc,CAACmB,aAAa,CAACC,QAAQ,EAAC,GAAC;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI,eAC1E1B,OAAA;QAAAoB,QAAA,gBAAGpB,OAAA;UAAAoB,QAAA,EAAQ;QAAQ;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS,KAAC,EAAClB,cAAc,CAACmB,aAAa,CAACE,OAAO,EAAC,GAAC;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI,eACxE1B,OAAA;QAAAoB,QAAA,gBAAGpB,OAAA;UAAAoB,QAAA,EAAQ;QAAW;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS,KAAC,EAAClB,cAAc,CAACmB,aAAa,CAACpB,SAAS,EAAC,GAAC;MAAA;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAGpF;EAAA,gBACF;AAEV;AAACrB,EAAA,CA7COF,KAAK;AAAA2B,EAAA,GAAL3B,KAAK;AA+Cd,eAAeA,KAAK;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}