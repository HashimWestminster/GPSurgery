{"ast":null,"code":"import { mergeConfigs } from '../../common/index.mjs';\nimport { normaliseDataset } from '../../common/normalise-dataset.mjs';\nimport '../../vendor/polyfills/Event.mjs';\n\n/**\n * Notification Banner component\n *\n * @class\n * @param {Element} $module - HTML element to use for notification banner\n * @param {NotificationBannerConfig} [config] - Notification banner config\n */\nfunction NotificationBanner($module, config) {\n  if (!($module instanceof HTMLElement)) {\n    return this;\n  }\n\n  /** @deprecated Will be made private in v5.0 */\n  this.$module = $module;\n  var defaultConfig = {\n    disableAutoFocus: false\n  };\n\n  /**\n   * @deprecated Will be made private in v5.0\n   * @type {NotificationBannerConfig}\n   */\n  this.config = mergeConfigs(defaultConfig, config || {}, normaliseDataset($module.dataset));\n}\n\n/**\n * Initialise component\n */\nNotificationBanner.prototype.init = function () {\n  // Check that required elements are present\n  if (!this.$module) {\n    return;\n  }\n  this.setFocus();\n};\n\n/**\n * Focus the element\n *\n * If `role=\"alert\"` is set, focus the element to help some assistive technologies\n * prioritise announcing it.\n *\n * You can turn off the auto-focus functionality by setting `data-disable-auto-focus=\"true\"` in the\n * component HTML. You might wish to do this based on user research findings, or to avoid a clash\n * with another element which should be focused when the page loads.\n *\n * @deprecated Will be made private in v5.0\n */\nNotificationBanner.prototype.setFocus = function () {\n  var $module = this.$module;\n  if (this.config.disableAutoFocus) {\n    return;\n  }\n  if ($module.getAttribute('role') !== 'alert') {\n    return;\n  }\n\n  // Set tabindex to -1 to make the element focusable with JavaScript.\n  // Remove the tabindex on blur as the component doesn't need to be focusable after the page has\n  // loaded.\n  if (!$module.getAttribute('tabindex')) {\n    $module.setAttribute('tabindex', '-1');\n    $module.addEventListener('blur', function () {\n      $module.removeAttribute('tabindex');\n    });\n  }\n  $module.focus();\n};\n\n/**\n * Notification banner config\n *\n * @typedef {object} NotificationBannerConfig\n * @property {boolean} [disableAutoFocus = false] - If set to `true` the\n *   notification banner will not be focussed when the page loads. This only\n *   applies if the component has a `role` of `alert` – in other cases the\n *   component will not be focused on page load, regardless of this option.\n */\n\nexport default NotificationBanner;","map":{"version":3,"names":["mergeConfigs","normaliseDataset","NotificationBanner","$module","config","HTMLElement","defaultConfig","disableAutoFocus","dataset","prototype","init","setFocus","getAttribute","setAttribute","addEventListener","removeAttribute","focus"],"sources":["C:/Users/thami/Documents/21W- Local Software Dev Group Project/medicalRecordsV2/node_modules/govuk-frontend/govuk-esm/components/notification-banner/notification-banner.mjs"],"sourcesContent":["import { mergeConfigs } from '../../common/index.mjs';\nimport { normaliseDataset } from '../../common/normalise-dataset.mjs';\nimport '../../vendor/polyfills/Event.mjs';\n\n/**\n * Notification Banner component\n *\n * @class\n * @param {Element} $module - HTML element to use for notification banner\n * @param {NotificationBannerConfig} [config] - Notification banner config\n */\nfunction NotificationBanner ($module, config) {\n  if (!($module instanceof HTMLElement)) {\n    return this\n  }\n\n  /** @deprecated Will be made private in v5.0 */\n  this.$module = $module;\n\n  var defaultConfig = {\n    disableAutoFocus: false\n  };\n\n  /**\n   * @deprecated Will be made private in v5.0\n   * @type {NotificationBannerConfig}\n   */\n  this.config = mergeConfigs(\n    defaultConfig,\n    config || {},\n    normaliseDataset($module.dataset)\n  );\n}\n\n/**\n * Initialise component\n */\nNotificationBanner.prototype.init = function () {\n  // Check that required elements are present\n  if (!this.$module) {\n    return\n  }\n\n  this.setFocus();\n};\n\n/**\n * Focus the element\n *\n * If `role=\"alert\"` is set, focus the element to help some assistive technologies\n * prioritise announcing it.\n *\n * You can turn off the auto-focus functionality by setting `data-disable-auto-focus=\"true\"` in the\n * component HTML. You might wish to do this based on user research findings, or to avoid a clash\n * with another element which should be focused when the page loads.\n *\n * @deprecated Will be made private in v5.0\n */\nNotificationBanner.prototype.setFocus = function () {\n  var $module = this.$module;\n\n  if (this.config.disableAutoFocus) {\n    return\n  }\n\n  if ($module.getAttribute('role') !== 'alert') {\n    return\n  }\n\n  // Set tabindex to -1 to make the element focusable with JavaScript.\n  // Remove the tabindex on blur as the component doesn't need to be focusable after the page has\n  // loaded.\n  if (!$module.getAttribute('tabindex')) {\n    $module.setAttribute('tabindex', '-1');\n\n    $module.addEventListener('blur', function () {\n      $module.removeAttribute('tabindex');\n    });\n  }\n\n  $module.focus();\n};\n\n/**\n * Notification banner config\n *\n * @typedef {object} NotificationBannerConfig\n * @property {boolean} [disableAutoFocus = false] - If set to `true` the\n *   notification banner will not be focussed when the page loads. This only\n *   applies if the component has a `role` of `alert` – in other cases the\n *   component will not be focused on page load, regardless of this option.\n */\n\nexport default NotificationBanner;\n//# sourceMappingURL=components/notification-banner/notification-banner.mjs.map\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,wBAAwB;AACrD,SAASC,gBAAgB,QAAQ,oCAAoC;AACrE,OAAO,kCAAkC;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,kBAAkBA,CAAEC,OAAO,EAAEC,MAAM,EAAE;EAC5C,IAAI,EAAED,OAAO,YAAYE,WAAW,CAAC,EAAE;IACrC,OAAO,IAAI;EACb;;EAEA;EACA,IAAI,CAACF,OAAO,GAAGA,OAAO;EAEtB,IAAIG,aAAa,GAAG;IAClBC,gBAAgB,EAAE;EACpB,CAAC;;EAED;AACF;AACA;AACA;EACE,IAAI,CAACH,MAAM,GAAGJ,YAAY,CACxBM,aAAa,EACbF,MAAM,IAAI,CAAC,CAAC,EACZH,gBAAgB,CAACE,OAAO,CAACK,OAAO,CAAC,CAClC;AACH;;AAEA;AACA;AACA;AACAN,kBAAkB,CAACO,SAAS,CAACC,IAAI,GAAG,YAAY;EAC9C;EACA,IAAI,CAAC,IAAI,CAACP,OAAO,EAAE;IACjB;EACF;EAEA,IAAI,CAACQ,QAAQ,EAAE;AACjB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAT,kBAAkB,CAACO,SAAS,CAACE,QAAQ,GAAG,YAAY;EAClD,IAAIR,OAAO,GAAG,IAAI,CAACA,OAAO;EAE1B,IAAI,IAAI,CAACC,MAAM,CAACG,gBAAgB,EAAE;IAChC;EACF;EAEA,IAAIJ,OAAO,CAACS,YAAY,CAAC,MAAM,CAAC,KAAK,OAAO,EAAE;IAC5C;EACF;;EAEA;EACA;EACA;EACA,IAAI,CAACT,OAAO,CAACS,YAAY,CAAC,UAAU,CAAC,EAAE;IACrCT,OAAO,CAACU,YAAY,CAAC,UAAU,EAAE,IAAI,CAAC;IAEtCV,OAAO,CAACW,gBAAgB,CAAC,MAAM,EAAE,YAAY;MAC3CX,OAAO,CAACY,eAAe,CAAC,UAAU,CAAC;IACrC,CAAC,CAAC;EACJ;EAEAZ,OAAO,CAACa,KAAK,EAAE;AACjB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAed,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}